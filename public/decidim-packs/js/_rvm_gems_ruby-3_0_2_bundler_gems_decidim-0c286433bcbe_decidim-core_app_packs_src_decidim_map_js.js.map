{"version":3,"file":"js/_rvm_gems_ruby-3_0_2_bundler_gems_decidim-0c286433bcbe_decidim-core_app_packs_src_decidim_map_js.js","mappings":";;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AC1CA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;AChDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA","sources":["webpack://app/../../../.rvm/gems/ruby-3.0.2/bundler/gems/decidim-0c286433bcbe/decidim-core/app/packs/src/decidim/map.js","webpack://app/../../../.rvm/gems/ruby-3.0.2/bundler/gems/decidim-0c286433bcbe/decidim-core/app/packs/src/decidim/map/controller/drag_marker.js","webpack://app/../../../.rvm/gems/ruby-3.0.2/bundler/gems/decidim-0c286433bcbe/decidim-core/app/packs/src/decidim/map/controller/static.js","webpack://app/../../../.rvm/gems/ruby-3.0.2/bundler/gems/decidim-0c286433bcbe/decidim-core/app/packs/src/decidim/map/factory.js","webpack://app/../../../.rvm/gems/ruby-3.0.2/bundler/gems/decidim-0c286433bcbe/decidim-core/app/packs/src/decidim/map/icon.js"],"sourcesContent":["import \"src/decidim/map/factory\"\n\n$(() => {\n  // Load the map controller factory method in the document.ready handler to\n  // allow overriding it by any script that is loaded before the document is\n  // ready.\n  let $mapElements = $(\"[data-decidim-map]\");\n  if ($mapElements.length < 1 && $(\"#map\").length > 0) {\n    throw new Error(\n      \"DEPRECATION: Please update your maps customizations or include 'decidim/map/legacy.js' for legacy support!\"\n    );\n  }\n\n  $mapElements.each((_i, el) => {\n    const $map = $(el);\n    let mapId = $map.attr(\"id\");\n    if (!mapId) {\n      mapId = `map-${Math.random().toString(36).substr(2, 9)}`;\n      $map.attr(\"id\", mapId);\n    }\n\n    const mapConfig = $map.data(\"decidim-map\");\n    const ctrl = window.Decidim.createMapController(mapId, mapConfig);\n    const map = ctrl.load();\n\n    $map.data(\"map\", map);\n    $map.data(\"map-controller\", ctrl);\n\n    $map.trigger(\"configure.decidim\", [map, mapConfig]);\n\n    ctrl.start();\n\n    // Indicates the map is loaded with the map objects initialized and ready\n    // to be used.\n    $map.trigger(\"ready.decidim\", [map, mapConfig]);\n  });\n});\n","import MapController from \"src/decidim/map/controller\"\n\nexport default class MapDragMarkerController extends MapController {\n  start() {\n    if (this.config.marker) {\n      this.addMarker(this.config.marker);\n    } else {\n      this.map.fitWorld();\n    }\n  }\n\n  addMarker(markerData) {\n    if (markerData.latitude === null || markerData.longitude === null) {\n      return;\n    }\n\n    const coordinates = {\n      lat: markerData.latitude,\n      lng: markerData.longitude\n    };\n    this.triggerEvent(\"coordinates\", [coordinates]);\n\n    this.marker = L.marker(coordinates, {\n      icon: this.createIcon(),\n      keyboard: true,\n      title: markerData.title,\n      draggable: true\n    });\n    this.marker.on(\"drag\", (ev) => {\n      this.triggerEvent(\"coordinates\", [ev.target.getLatLng()]);\n    });\n    this.marker.addTo(this.map);\n\n    const zoom = parseInt(this.config.zoom, 10) || 14;\n    this.map.setView(coordinates, zoom);\n  }\n\n  getMarker() {\n    return this.marker;\n  }\n\n  removeMarker() {\n    if (this.marker) {\n      this.marker.remove();\n      this.marker = null;\n    }\n  }\n}\n","import MapController from \"src/decidim/map/controller\"\n\nconst openLink = window.open;\n\nexport default class MapStaticController extends MapController {\n  start() {\n    this.map.removeControl(this.map.zoomControl);\n    this.map.dragging.disable();\n    this.map.touchZoom.disable();\n    this.map.doubleClickZoom.disable();\n    this.map.scrollWheelZoom.disable();\n    this.map.boxZoom.disable();\n    this.map.keyboard.disable();\n    if (this.map.tap) {\n      this.map.tap.disable();\n    }\n\n    if (this.config.zoom) {\n      this.map.setZoom(this.config.zoom);\n    } else {\n      this.map.setZoom(15);\n    }\n\n    if (this.config.latitude && this.config.longitude) {\n      const coordinates = [this.config.latitude, this.config.longitude];\n\n      this.map.panTo(coordinates);\n      const marker = L.marker(coordinates, {\n        icon: this.createIcon(),\n        keyboard: true,\n        title: this.config.title\n      }).addTo(this.map);\n      marker._icon.removeAttribute(\"tabindex\");\n    }\n\n    if (this.config.link) {\n      this.map._container.addEventListener(\"click\", (ev) => {\n        ev.preventDefault();\n        this.map._container.focus();\n        openLink(this.config.link, \"_blank\");\n      });\n    }\n  }\n}\n","import \"src/decidim/map/icon\"\n\nimport MapMarkersController from \"src/decidim/map/controller/markers\"\nimport MapStaticController from \"src/decidim/map/controller/static\"\nimport MapDragMarkerController from \"src/decidim/map/controller/drag_marker\"\n\n/**\n * A factory method that creates a new map controller instance. This method\n * can be overridden in order to return different types of maps for\n * differently configured map elements.\n *\n * For instance, one map could pass an extra `type` configuration with the\n * value \"custom\" for the map element, this factory method would identify\n * it and then return a different controller for that map than the default.\n * This would allow this types of maps to function differently.\n *\n * An example how to use in the ERB view:\n *   <%= dynamic_map_for type: \"custom\" do %>\n *     <%= javascript_pack_tag \"map_customization\" %>\n *   <% end %>\n *\n * And then the actual customization at `map_customization.js.es6`:\n *   var originalCreateMapController = window.Decidim.createMapController;\n *   window.Decidim.createMapController = (mapId, config) => {\n *     if (config.type === \"custom\") {\n *       // Obviously you need to implement CustomMapController for this to\n *       // work. You can find an example at:\n *       // decidim-dev/app/packs/src/decidim/dev/test/custom_map_factory.js\n *       return new window.Decidim.CustomMapController(mapId, config);\n *     }\n *\n *     return originalCreateMapController(mapId, config);\n *   }\n *\n * @param {string} mapId The ID of the map element.\n * @param {Object} config The map configuration object.\n * @returns {MapController} The controller for the map.\n */\nconst createMapController = function(mapId, config) {\n  if (config.type === \"static\") {\n    return new MapStaticController(mapId, config);\n  } else if (config.type === \"drag-marker\") {\n    return new MapDragMarkerController(mapId, config);\n  }\n\n  return new MapMarkersController(mapId, config);\n}\n\nwindow.Decidim.createMapController = createMapController;\n","import { SVGIcon } from \"leaflet-svgicon\"\n\nL.DivIcon.SVGIcon = SVGIcon;\nL.DivIcon.SVGIcon.DecidimIcon = L.DivIcon.SVGIcon.extend({\n  options: {\n    fillColor: \"#ef604d\",\n    opacity: 0\n  },\n  _createPathDescription: function() {\n    return \"M14 1.17a11.685 11.685 0 0 0-11.685 11.685c0 11.25 10.23 20.61 10.665 21a1.5 1.5 0 0 0 2.025 0c0.435-.435 10.665-9.81 10.665-21A11.685 11.685 0 0 0 14 1.17Zm0 17.415A5.085 5.085 0 1 1 19.085 13.5 5.085 5.085 0 0 1 14 18.585Z\";\n  },\n  _createCircle: function() {\n    return \"\"\n  },\n  // Improved version of the _createSVG, essentially the same as in later\n  // versions of Leaflet. It adds the `px` values after the width and height\n  // CSS making the focus borders work correctly across all browsers.\n  _createSVG: function() {\n    const path = this._createPath();\n    const circle = this._createCircle();\n    const text = this._createText();\n    const className = `${this.options.className}-svg`;\n\n    const style = `width:${this.options.iconSize.x}px; height:${this.options.iconSize.y}px;`;\n\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"${className}\" style=\"${style}\">${path}${circle}${text}</svg>`;\n\n    return svg;\n  }\n});\n"],"names":[],"sourceRoot":""}